//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.237.
// 
#pragma warning disable 1591

namespace iSpyServer.iSpyWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="iSpySoap", Namespace="http://tempuri.org/")]
    public partial class iSpy : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback TestConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestConnection2OperationCompleted;
        
        private System.Threading.SendOrPostCallback TestConnection3OperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoteAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConnectOperationCompleted;
        
        private System.Threading.SendOrPostCallback Connect2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Connect3OperationCompleted;
        
        private System.Threading.SendOrPostCallback Connect4OperationCompleted;
        
        private System.Threading.SendOrPostCallback PingOperationCompleted;
        
        private System.Threading.SendOrPostCallback PingAliveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisconnectOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForceSyncOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForceSync2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyPromoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GrantAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendAlertWithImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendAlert2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendAlertWithImage2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendAlertWithImage3OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFrameGrabOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFrameGrab2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFrameGrab3OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMMS2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductLatestVersionGetOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public iSpy() {
            this.Url = "http://www.ispyconnect.com/ispy/Webservices/iSpy.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event TestConnectionCompletedEventHandler TestConnectionCompleted;
        
        /// <remarks/>
        public event TestConnection2CompletedEventHandler TestConnection2Completed;
        
        /// <remarks/>
        public event TestConnection3CompletedEventHandler TestConnection3Completed;
        
        /// <remarks/>
        public event RemoteAddressCompletedEventHandler RemoteAddressCompleted;
        
        /// <remarks/>
        public event ConnectCompletedEventHandler ConnectCompleted;
        
        /// <remarks/>
        public event Connect2CompletedEventHandler Connect2Completed;
        
        /// <remarks/>
        public event Connect3CompletedEventHandler Connect3Completed;
        
        /// <remarks/>
        public event Connect4CompletedEventHandler Connect4Completed;
        
        /// <remarks/>
        public event PingCompletedEventHandler PingCompleted;
        
        /// <remarks/>
        public event PingAliveCompletedEventHandler PingAliveCompleted;
        
        /// <remarks/>
        public event DisconnectCompletedEventHandler DisconnectCompleted;
        
        /// <remarks/>
        public event NewContentCompletedEventHandler NewContentCompleted;
        
        /// <remarks/>
        public event ForceSyncCompletedEventHandler ForceSyncCompleted;
        
        /// <remarks/>
        public event ForceSync2CompletedEventHandler ForceSync2Completed;
        
        /// <remarks/>
        public event SaveSettingsCompletedEventHandler SaveSettingsCompleted;
        
        /// <remarks/>
        public event ApplyPromoCompletedEventHandler ApplyPromoCompleted;
        
        /// <remarks/>
        public event GrantAccessCompletedEventHandler GrantAccessCompleted;
        
        /// <remarks/>
        public event SendAlertCompletedEventHandler SendAlertCompleted;
        
        /// <remarks/>
        public event SendContentCompletedEventHandler SendContentCompleted;
        
        /// <remarks/>
        public event SendAlertWithImageCompletedEventHandler SendAlertWithImageCompleted;
        
        /// <remarks/>
        public event SendAlert2CompletedEventHandler SendAlert2Completed;
        
        /// <remarks/>
        public event SendAlertWithImage2CompletedEventHandler SendAlertWithImage2Completed;
        
        /// <remarks/>
        public event SendAlertWithImage3CompletedEventHandler SendAlertWithImage3Completed;
        
        /// <remarks/>
        public event SendSMSCompletedEventHandler SendSMSCompleted;
        
        /// <remarks/>
        public event SendFrameGrabCompletedEventHandler SendFrameGrabCompleted;
        
        /// <remarks/>
        public event SendFrameGrab2CompletedEventHandler SendFrameGrab2Completed;
        
        /// <remarks/>
        public event SendFrameGrab3CompletedEventHandler SendFrameGrab3Completed;
        
        /// <remarks/>
        public event SendMMSCompletedEventHandler SendMMSCompleted;
        
        /// <remarks/>
        public event SendMMS2CompletedEventHandler SendMMS2Completed;
        
        /// <remarks/>
        public event ProductLatestVersionGetCompletedEventHandler ProductLatestVersionGetCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestConnection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] TestConnection(string Username, string Password, int Port, string Identifier) {
            object[] results = this.Invoke("TestConnection", new object[] {
                        Username,
                        Password,
                        Port,
                        Identifier});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void TestConnectionAsync(string Username, string Password, int Port, string Identifier) {
            this.TestConnectionAsync(Username, Password, Port, Identifier, null);
        }
        
        /// <remarks/>
        public void TestConnectionAsync(string Username, string Password, int Port, string Identifier, object userState) {
            if ((this.TestConnectionOperationCompleted == null)) {
                this.TestConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConnectionOperationCompleted);
            }
            this.InvokeAsync("TestConnection", new object[] {
                        Username,
                        Password,
                        Port,
                        Identifier}, this.TestConnectionOperationCompleted, userState);
        }
        
        private void OnTestConnectionOperationCompleted(object arg) {
            if ((this.TestConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConnectionCompleted(this, new TestConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestConnection2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] TestConnection2(string Username, string Password, int Port, string Identifier, bool TryLoopback) {
            object[] results = this.Invoke("TestConnection2", new object[] {
                        Username,
                        Password,
                        Port,
                        Identifier,
                        TryLoopback});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void TestConnection2Async(string Username, string Password, int Port, string Identifier, bool TryLoopback) {
            this.TestConnection2Async(Username, Password, Port, Identifier, TryLoopback, null);
        }
        
        /// <remarks/>
        public void TestConnection2Async(string Username, string Password, int Port, string Identifier, bool TryLoopback, object userState) {
            if ((this.TestConnection2OperationCompleted == null)) {
                this.TestConnection2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConnection2OperationCompleted);
            }
            this.InvokeAsync("TestConnection2", new object[] {
                        Username,
                        Password,
                        Port,
                        Identifier,
                        TryLoopback}, this.TestConnection2OperationCompleted, userState);
        }
        
        private void OnTestConnection2OperationCompleted(object arg) {
            if ((this.TestConnection2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConnection2Completed(this, new TestConnection2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestConnection3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] TestConnection3(string Username, string Password, int Port, string Identifier, bool TryLoopback) {
            object[] results = this.Invoke("TestConnection3", new object[] {
                        Username,
                        Password,
                        Port,
                        Identifier,
                        TryLoopback});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void TestConnection3Async(string Username, string Password, int Port, string Identifier, bool TryLoopback) {
            this.TestConnection3Async(Username, Password, Port, Identifier, TryLoopback, null);
        }
        
        /// <remarks/>
        public void TestConnection3Async(string Username, string Password, int Port, string Identifier, bool TryLoopback, object userState) {
            if ((this.TestConnection3OperationCompleted == null)) {
                this.TestConnection3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConnection3OperationCompleted);
            }
            this.InvokeAsync("TestConnection3", new object[] {
                        Username,
                        Password,
                        Port,
                        Identifier,
                        TryLoopback}, this.TestConnection3OperationCompleted, userState);
        }
        
        private void OnTestConnection3OperationCompleted(object arg) {
            if ((this.TestConnection3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConnection3Completed(this, new TestConnection3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoteAddress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemoteAddress() {
            object[] results = this.Invoke("RemoteAddress", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoteAddressAsync() {
            this.RemoteAddressAsync(null);
        }
        
        /// <remarks/>
        public void RemoteAddressAsync(object userState) {
            if ((this.RemoteAddressOperationCompleted == null)) {
                this.RemoteAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoteAddressOperationCompleted);
            }
            this.InvokeAsync("RemoteAddress", new object[0], this.RemoteAddressOperationCompleted, userState);
        }
        
        private void OnRemoteAddressOperationCompleted(object arg) {
            if ((this.RemoteAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoteAddressCompleted(this, new RemoteAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Connect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Connect(string Username, string Password, int Port, string Identifier) {
            object[] results = this.Invoke("Connect", new object[] {
                        Username,
                        Password,
                        Port,
                        Identifier});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConnectAsync(string Username, string Password, int Port, string Identifier) {
            this.ConnectAsync(Username, Password, Port, Identifier, null);
        }
        
        /// <remarks/>
        public void ConnectAsync(string Username, string Password, int Port, string Identifier, object userState) {
            if ((this.ConnectOperationCompleted == null)) {
                this.ConnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnectOperationCompleted);
            }
            this.InvokeAsync("Connect", new object[] {
                        Username,
                        Password,
                        Port,
                        Identifier}, this.ConnectOperationCompleted, userState);
        }
        
        private void OnConnectOperationCompleted(object arg) {
            if ((this.ConnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConnectCompleted(this, new ConnectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Connect2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Connect2(string Username, string Password, int Port, string Identifier, bool TryLoopBack, string Version) {
            object[] results = this.Invoke("Connect2", new object[] {
                        Username,
                        Password,
                        Port,
                        Identifier,
                        TryLoopBack,
                        Version});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Connect2Async(string Username, string Password, int Port, string Identifier, bool TryLoopBack, string Version) {
            this.Connect2Async(Username, Password, Port, Identifier, TryLoopBack, Version, null);
        }
        
        /// <remarks/>
        public void Connect2Async(string Username, string Password, int Port, string Identifier, bool TryLoopBack, string Version, object userState) {
            if ((this.Connect2OperationCompleted == null)) {
                this.Connect2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnect2OperationCompleted);
            }
            this.InvokeAsync("Connect2", new object[] {
                        Username,
                        Password,
                        Port,
                        Identifier,
                        TryLoopBack,
                        Version}, this.Connect2OperationCompleted, userState);
        }
        
        private void OnConnect2OperationCompleted(object arg) {
            if ((this.Connect2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Connect2Completed(this, new Connect2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Connect3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Connect3(string Username, string Password, int Port, string Identifier, bool TryLoopBack, string Version, string ComputerName) {
            object[] results = this.Invoke("Connect3", new object[] {
                        Username,
                        Password,
                        Port,
                        Identifier,
                        TryLoopBack,
                        Version,
                        ComputerName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Connect3Async(string Username, string Password, int Port, string Identifier, bool TryLoopBack, string Version, string ComputerName) {
            this.Connect3Async(Username, Password, Port, Identifier, TryLoopBack, Version, ComputerName, null);
        }
        
        /// <remarks/>
        public void Connect3Async(string Username, string Password, int Port, string Identifier, bool TryLoopBack, string Version, string ComputerName, object userState) {
            if ((this.Connect3OperationCompleted == null)) {
                this.Connect3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnect3OperationCompleted);
            }
            this.InvokeAsync("Connect3", new object[] {
                        Username,
                        Password,
                        Port,
                        Identifier,
                        TryLoopBack,
                        Version,
                        ComputerName}, this.Connect3OperationCompleted, userState);
        }
        
        private void OnConnect3OperationCompleted(object arg) {
            if ((this.Connect3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Connect3Completed(this, new Connect3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Connect4", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Connect4(string Username, string Password, int Port, string Identifier, bool TryLoopBack, string Version, string ComputerName) {
            object[] results = this.Invoke("Connect4", new object[] {
                        Username,
                        Password,
                        Port,
                        Identifier,
                        TryLoopBack,
                        Version,
                        ComputerName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Connect4Async(string Username, string Password, int Port, string Identifier, bool TryLoopBack, string Version, string ComputerName) {
            this.Connect4Async(Username, Password, Port, Identifier, TryLoopBack, Version, ComputerName, null);
        }
        
        /// <remarks/>
        public void Connect4Async(string Username, string Password, int Port, string Identifier, bool TryLoopBack, string Version, string ComputerName, object userState) {
            if ((this.Connect4OperationCompleted == null)) {
                this.Connect4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnect4OperationCompleted);
            }
            this.InvokeAsync("Connect4", new object[] {
                        Username,
                        Password,
                        Port,
                        Identifier,
                        TryLoopBack,
                        Version,
                        ComputerName}, this.Connect4OperationCompleted, userState);
        }
        
        private void OnConnect4OperationCompleted(object arg) {
            if ((this.Connect4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Connect4Completed(this, new Connect4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ping", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Ping() {
            object[] results = this.Invoke("Ping", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PingAsync() {
            this.PingAsync(null);
        }
        
        /// <remarks/>
        public void PingAsync(object userState) {
            if ((this.PingOperationCompleted == null)) {
                this.PingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPingOperationCompleted);
            }
            this.InvokeAsync("Ping", new object[0], this.PingOperationCompleted, userState);
        }
        
        private void OnPingOperationCompleted(object arg) {
            if ((this.PingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PingCompleted(this, new PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PingAlive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PingAlive(int Port) {
            object[] results = this.Invoke("PingAlive", new object[] {
                        Port});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PingAliveAsync(int Port) {
            this.PingAliveAsync(Port, null);
        }
        
        /// <remarks/>
        public void PingAliveAsync(int Port, object userState) {
            if ((this.PingAliveOperationCompleted == null)) {
                this.PingAliveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPingAliveOperationCompleted);
            }
            this.InvokeAsync("PingAlive", new object[] {
                        Port}, this.PingAliveOperationCompleted, userState);
        }
        
        private void OnPingAliveOperationCompleted(object arg) {
            if ((this.PingAliveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PingAliveCompleted(this, new PingAliveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Disconnect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Disconnect(string Username, string Password, int Port) {
            object[] results = this.Invoke("Disconnect", new object[] {
                        Username,
                        Password,
                        Port});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DisconnectAsync(string Username, string Password, int Port) {
            this.DisconnectAsync(Username, Password, Port, null);
        }
        
        /// <remarks/>
        public void DisconnectAsync(string Username, string Password, int Port, object userState) {
            if ((this.DisconnectOperationCompleted == null)) {
                this.DisconnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisconnectOperationCompleted);
            }
            this.InvokeAsync("Disconnect", new object[] {
                        Username,
                        Password,
                        Port}, this.DisconnectOperationCompleted, userState);
        }
        
        private void OnDisconnectOperationCompleted(object arg) {
            if ((this.DisconnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisconnectCompleted(this, new DisconnectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewContent(string Username, string Password, int Port, int UserObjectID, int ObjectTypeID) {
            object[] results = this.Invoke("NewContent", new object[] {
                        Username,
                        Password,
                        Port,
                        UserObjectID,
                        ObjectTypeID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewContentAsync(string Username, string Password, int Port, int UserObjectID, int ObjectTypeID) {
            this.NewContentAsync(Username, Password, Port, UserObjectID, ObjectTypeID, null);
        }
        
        /// <remarks/>
        public void NewContentAsync(string Username, string Password, int Port, int UserObjectID, int ObjectTypeID, object userState) {
            if ((this.NewContentOperationCompleted == null)) {
                this.NewContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewContentOperationCompleted);
            }
            this.InvokeAsync("NewContent", new object[] {
                        Username,
                        Password,
                        Port,
                        UserObjectID,
                        ObjectTypeID}, this.NewContentOperationCompleted, userState);
        }
        
        private void OnNewContentOperationCompleted(object arg) {
            if ((this.NewContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewContentCompleted(this, new NewContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ForceSync", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ForceSync(string Username, string Password, int Port, string ObjectList) {
            object[] results = this.Invoke("ForceSync", new object[] {
                        Username,
                        Password,
                        Port,
                        ObjectList});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ForceSyncAsync(string Username, string Password, int Port, string ObjectList) {
            this.ForceSyncAsync(Username, Password, Port, ObjectList, null);
        }
        
        /// <remarks/>
        public void ForceSyncAsync(string Username, string Password, int Port, string ObjectList, object userState) {
            if ((this.ForceSyncOperationCompleted == null)) {
                this.ForceSyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForceSyncOperationCompleted);
            }
            this.InvokeAsync("ForceSync", new object[] {
                        Username,
                        Password,
                        Port,
                        ObjectList}, this.ForceSyncOperationCompleted, userState);
        }
        
        private void OnForceSyncOperationCompleted(object arg) {
            if ((this.ForceSyncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForceSyncCompleted(this, new ForceSyncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ForceSync2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ForceSync2(string Username, string Password, int Port, string Internal_IPAddress, int Internal_Port, string ObjectList) {
            object[] results = this.Invoke("ForceSync2", new object[] {
                        Username,
                        Password,
                        Port,
                        Internal_IPAddress,
                        Internal_Port,
                        ObjectList});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ForceSync2Async(string Username, string Password, int Port, string Internal_IPAddress, int Internal_Port, string ObjectList) {
            this.ForceSync2Async(Username, Password, Port, Internal_IPAddress, Internal_Port, ObjectList, null);
        }
        
        /// <remarks/>
        public void ForceSync2Async(string Username, string Password, int Port, string Internal_IPAddress, int Internal_Port, string ObjectList, object userState) {
            if ((this.ForceSync2OperationCompleted == null)) {
                this.ForceSync2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnForceSync2OperationCompleted);
            }
            this.InvokeAsync("ForceSync2", new object[] {
                        Username,
                        Password,
                        Port,
                        Internal_IPAddress,
                        Internal_Port,
                        ObjectList}, this.ForceSync2OperationCompleted, userState);
        }
        
        private void OnForceSync2OperationCompleted(object arg) {
            if ((this.ForceSync2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForceSync2Completed(this, new ForceSync2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveSettings(bool NotifyOnConnect, bool Newsletters, string URLOverride) {
            object[] results = this.Invoke("SaveSettings", new object[] {
                        NotifyOnConnect,
                        Newsletters,
                        URLOverride});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveSettingsAsync(bool NotifyOnConnect, bool Newsletters, string URLOverride) {
            this.SaveSettingsAsync(NotifyOnConnect, Newsletters, URLOverride, null);
        }
        
        /// <remarks/>
        public void SaveSettingsAsync(bool NotifyOnConnect, bool Newsletters, string URLOverride, object userState) {
            if ((this.SaveSettingsOperationCompleted == null)) {
                this.SaveSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSettingsOperationCompleted);
            }
            this.InvokeAsync("SaveSettings", new object[] {
                        NotifyOnConnect,
                        Newsletters,
                        URLOverride}, this.SaveSettingsOperationCompleted, userState);
        }
        
        private void OnSaveSettingsOperationCompleted(object arg) {
            if ((this.SaveSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSettingsCompleted(this, new SaveSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ApplyPromo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ApplyPromo(string PromoCode) {
            object[] results = this.Invoke("ApplyPromo", new object[] {
                        PromoCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyPromoAsync(string PromoCode) {
            this.ApplyPromoAsync(PromoCode, null);
        }
        
        /// <remarks/>
        public void ApplyPromoAsync(string PromoCode, object userState) {
            if ((this.ApplyPromoOperationCompleted == null)) {
                this.ApplyPromoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyPromoOperationCompleted);
            }
            this.InvokeAsync("ApplyPromo", new object[] {
                        PromoCode}, this.ApplyPromoOperationCompleted, userState);
        }
        
        private void OnApplyPromoOperationCompleted(object arg) {
            if ((this.ApplyPromoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyPromoCompleted(this, new ApplyPromoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GrantAccess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GrantAccess(string EmailAddress) {
            object[] results = this.Invoke("GrantAccess", new object[] {
                        EmailAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GrantAccessAsync(string EmailAddress) {
            this.GrantAccessAsync(EmailAddress, null);
        }
        
        /// <remarks/>
        public void GrantAccessAsync(string EmailAddress, object userState) {
            if ((this.GrantAccessOperationCompleted == null)) {
                this.GrantAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGrantAccessOperationCompleted);
            }
            this.InvokeAsync("GrantAccess", new object[] {
                        EmailAddress}, this.GrantAccessOperationCompleted, userState);
        }
        
        private void OnGrantAccessOperationCompleted(object arg) {
            if ((this.GrantAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GrantAccessCompleted(this, new GrantAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendAlert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendAlert(string Username, string Password, string AlertSubject, string AlertBody) {
            object[] results = this.Invoke("SendAlert", new object[] {
                        Username,
                        Password,
                        AlertSubject,
                        AlertBody});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendAlertAsync(string Username, string Password, string AlertSubject, string AlertBody) {
            this.SendAlertAsync(Username, Password, AlertSubject, AlertBody, null);
        }
        
        /// <remarks/>
        public void SendAlertAsync(string Username, string Password, string AlertSubject, string AlertBody, object userState) {
            if ((this.SendAlertOperationCompleted == null)) {
                this.SendAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendAlertOperationCompleted);
            }
            this.InvokeAsync("SendAlert", new object[] {
                        Username,
                        Password,
                        AlertSubject,
                        AlertBody}, this.SendAlertOperationCompleted, userState);
        }
        
        private void OnSendAlertOperationCompleted(object arg) {
            if ((this.SendAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendAlertCompleted(this, new SendAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendContent(string Username, string Password, string EmailAddress, string Subject, string Message) {
            object[] results = this.Invoke("SendContent", new object[] {
                        Username,
                        Password,
                        EmailAddress,
                        Subject,
                        Message});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendContentAsync(string Username, string Password, string EmailAddress, string Subject, string Message) {
            this.SendContentAsync(Username, Password, EmailAddress, Subject, Message, null);
        }
        
        /// <remarks/>
        public void SendContentAsync(string Username, string Password, string EmailAddress, string Subject, string Message, object userState) {
            if ((this.SendContentOperationCompleted == null)) {
                this.SendContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendContentOperationCompleted);
            }
            this.InvokeAsync("SendContent", new object[] {
                        Username,
                        Password,
                        EmailAddress,
                        Subject,
                        Message}, this.SendContentOperationCompleted, userState);
        }
        
        private void OnSendContentOperationCompleted(object arg) {
            if ((this.SendContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendContentCompleted(this, new SendContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendAlertWithImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendAlertWithImage(string Username, string Password, string AlertSubject, string AlertBody, int CameraID, int Port, string AuthenticationCode) {
            object[] results = this.Invoke("SendAlertWithImage", new object[] {
                        Username,
                        Password,
                        AlertSubject,
                        AlertBody,
                        CameraID,
                        Port,
                        AuthenticationCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendAlertWithImageAsync(string Username, string Password, string AlertSubject, string AlertBody, int CameraID, int Port, string AuthenticationCode) {
            this.SendAlertWithImageAsync(Username, Password, AlertSubject, AlertBody, CameraID, Port, AuthenticationCode, null);
        }
        
        /// <remarks/>
        public void SendAlertWithImageAsync(string Username, string Password, string AlertSubject, string AlertBody, int CameraID, int Port, string AuthenticationCode, object userState) {
            if ((this.SendAlertWithImageOperationCompleted == null)) {
                this.SendAlertWithImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendAlertWithImageOperationCompleted);
            }
            this.InvokeAsync("SendAlertWithImage", new object[] {
                        Username,
                        Password,
                        AlertSubject,
                        AlertBody,
                        CameraID,
                        Port,
                        AuthenticationCode}, this.SendAlertWithImageOperationCompleted, userState);
        }
        
        private void OnSendAlertWithImageOperationCompleted(object arg) {
            if ((this.SendAlertWithImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendAlertWithImageCompleted(this, new SendAlertWithImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendAlert2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendAlert2(string Username, string Password, string EmailAddress, string AlertSubject, string AlertBody) {
            object[] results = this.Invoke("SendAlert2", new object[] {
                        Username,
                        Password,
                        EmailAddress,
                        AlertSubject,
                        AlertBody});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendAlert2Async(string Username, string Password, string EmailAddress, string AlertSubject, string AlertBody) {
            this.SendAlert2Async(Username, Password, EmailAddress, AlertSubject, AlertBody, null);
        }
        
        /// <remarks/>
        public void SendAlert2Async(string Username, string Password, string EmailAddress, string AlertSubject, string AlertBody, object userState) {
            if ((this.SendAlert2OperationCompleted == null)) {
                this.SendAlert2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendAlert2OperationCompleted);
            }
            this.InvokeAsync("SendAlert2", new object[] {
                        Username,
                        Password,
                        EmailAddress,
                        AlertSubject,
                        AlertBody}, this.SendAlert2OperationCompleted, userState);
        }
        
        private void OnSendAlert2OperationCompleted(object arg) {
            if ((this.SendAlert2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendAlert2Completed(this, new SendAlert2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendAlertWithImage2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendAlertWithImage2(string Username, string Password, string EmailAddress, string AlertSubject, string AlertBody, int CameraID, int Port, string AuthenticationCode) {
            object[] results = this.Invoke("SendAlertWithImage2", new object[] {
                        Username,
                        Password,
                        EmailAddress,
                        AlertSubject,
                        AlertBody,
                        CameraID,
                        Port,
                        AuthenticationCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendAlertWithImage2Async(string Username, string Password, string EmailAddress, string AlertSubject, string AlertBody, int CameraID, int Port, string AuthenticationCode) {
            this.SendAlertWithImage2Async(Username, Password, EmailAddress, AlertSubject, AlertBody, CameraID, Port, AuthenticationCode, null);
        }
        
        /// <remarks/>
        public void SendAlertWithImage2Async(string Username, string Password, string EmailAddress, string AlertSubject, string AlertBody, int CameraID, int Port, string AuthenticationCode, object userState) {
            if ((this.SendAlertWithImage2OperationCompleted == null)) {
                this.SendAlertWithImage2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendAlertWithImage2OperationCompleted);
            }
            this.InvokeAsync("SendAlertWithImage2", new object[] {
                        Username,
                        Password,
                        EmailAddress,
                        AlertSubject,
                        AlertBody,
                        CameraID,
                        Port,
                        AuthenticationCode}, this.SendAlertWithImage2OperationCompleted, userState);
        }
        
        private void OnSendAlertWithImage2OperationCompleted(object arg) {
            if ((this.SendAlertWithImage2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendAlertWithImage2Completed(this, new SendAlertWithImage2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendAlertWithImage3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendAlertWithImage3(string Username, string Password, string EmailAddress, string AlertSubject, string AlertBody, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] ImageData) {
            object[] results = this.Invoke("SendAlertWithImage3", new object[] {
                        Username,
                        Password,
                        EmailAddress,
                        AlertSubject,
                        AlertBody,
                        ImageData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendAlertWithImage3Async(string Username, string Password, string EmailAddress, string AlertSubject, string AlertBody, byte[] ImageData) {
            this.SendAlertWithImage3Async(Username, Password, EmailAddress, AlertSubject, AlertBody, ImageData, null);
        }
        
        /// <remarks/>
        public void SendAlertWithImage3Async(string Username, string Password, string EmailAddress, string AlertSubject, string AlertBody, byte[] ImageData, object userState) {
            if ((this.SendAlertWithImage3OperationCompleted == null)) {
                this.SendAlertWithImage3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendAlertWithImage3OperationCompleted);
            }
            this.InvokeAsync("SendAlertWithImage3", new object[] {
                        Username,
                        Password,
                        EmailAddress,
                        AlertSubject,
                        AlertBody,
                        ImageData}, this.SendAlertWithImage3OperationCompleted, userState);
        }
        
        private void OnSendAlertWithImage3OperationCompleted(object arg) {
            if ((this.SendAlertWithImage3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendAlertWithImage3Completed(this, new SendAlertWithImage3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSMS(string Username, string Password, string SMSNumber, string Message) {
            object[] results = this.Invoke("SendSMS", new object[] {
                        Username,
                        Password,
                        SMSNumber,
                        Message});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSAsync(string Username, string Password, string SMSNumber, string Message) {
            this.SendSMSAsync(Username, Password, SMSNumber, Message, null);
        }
        
        /// <remarks/>
        public void SendSMSAsync(string Username, string Password, string SMSNumber, string Message, object userState) {
            if ((this.SendSMSOperationCompleted == null)) {
                this.SendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOperationCompleted);
            }
            this.InvokeAsync("SendSMS", new object[] {
                        Username,
                        Password,
                        SMSNumber,
                        Message}, this.SendSMSOperationCompleted, userState);
        }
        
        private void OnSendSMSOperationCompleted(object arg) {
            if ((this.SendSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSCompleted(this, new SendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendFrameGrab", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendFrameGrab(string Username, string Password, string Subject, string Body, int CameraID, int Port, string AuthenticationCode) {
            object[] results = this.Invoke("SendFrameGrab", new object[] {
                        Username,
                        Password,
                        Subject,
                        Body,
                        CameraID,
                        Port,
                        AuthenticationCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendFrameGrabAsync(string Username, string Password, string Subject, string Body, int CameraID, int Port, string AuthenticationCode) {
            this.SendFrameGrabAsync(Username, Password, Subject, Body, CameraID, Port, AuthenticationCode, null);
        }
        
        /// <remarks/>
        public void SendFrameGrabAsync(string Username, string Password, string Subject, string Body, int CameraID, int Port, string AuthenticationCode, object userState) {
            if ((this.SendFrameGrabOperationCompleted == null)) {
                this.SendFrameGrabOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFrameGrabOperationCompleted);
            }
            this.InvokeAsync("SendFrameGrab", new object[] {
                        Username,
                        Password,
                        Subject,
                        Body,
                        CameraID,
                        Port,
                        AuthenticationCode}, this.SendFrameGrabOperationCompleted, userState);
        }
        
        private void OnSendFrameGrabOperationCompleted(object arg) {
            if ((this.SendFrameGrabCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFrameGrabCompleted(this, new SendFrameGrabCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendFrameGrab2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendFrameGrab2(string Username, string Password, string EmailAddress, string Subject, string Body, int CameraID, int Port, string AuthenticationCode) {
            object[] results = this.Invoke("SendFrameGrab2", new object[] {
                        Username,
                        Password,
                        EmailAddress,
                        Subject,
                        Body,
                        CameraID,
                        Port,
                        AuthenticationCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendFrameGrab2Async(string Username, string Password, string EmailAddress, string Subject, string Body, int CameraID, int Port, string AuthenticationCode) {
            this.SendFrameGrab2Async(Username, Password, EmailAddress, Subject, Body, CameraID, Port, AuthenticationCode, null);
        }
        
        /// <remarks/>
        public void SendFrameGrab2Async(string Username, string Password, string EmailAddress, string Subject, string Body, int CameraID, int Port, string AuthenticationCode, object userState) {
            if ((this.SendFrameGrab2OperationCompleted == null)) {
                this.SendFrameGrab2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFrameGrab2OperationCompleted);
            }
            this.InvokeAsync("SendFrameGrab2", new object[] {
                        Username,
                        Password,
                        EmailAddress,
                        Subject,
                        Body,
                        CameraID,
                        Port,
                        AuthenticationCode}, this.SendFrameGrab2OperationCompleted, userState);
        }
        
        private void OnSendFrameGrab2OperationCompleted(object arg) {
            if ((this.SendFrameGrab2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFrameGrab2Completed(this, new SendFrameGrab2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendFrameGrab3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendFrameGrab3(string Username, string Password, string EmailAddress, string Subject, string Body, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] ImageData) {
            object[] results = this.Invoke("SendFrameGrab3", new object[] {
                        Username,
                        Password,
                        EmailAddress,
                        Subject,
                        Body,
                        ImageData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendFrameGrab3Async(string Username, string Password, string EmailAddress, string Subject, string Body, byte[] ImageData) {
            this.SendFrameGrab3Async(Username, Password, EmailAddress, Subject, Body, ImageData, null);
        }
        
        /// <remarks/>
        public void SendFrameGrab3Async(string Username, string Password, string EmailAddress, string Subject, string Body, byte[] ImageData, object userState) {
            if ((this.SendFrameGrab3OperationCompleted == null)) {
                this.SendFrameGrab3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFrameGrab3OperationCompleted);
            }
            this.InvokeAsync("SendFrameGrab3", new object[] {
                        Username,
                        Password,
                        EmailAddress,
                        Subject,
                        Body,
                        ImageData}, this.SendFrameGrab3OperationCompleted, userState);
        }
        
        private void OnSendFrameGrab3OperationCompleted(object arg) {
            if ((this.SendFrameGrab3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFrameGrab3Completed(this, new SendFrameGrab3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMMS(string Username, string Password, string SMSNumber, string Message, int CameraID, int Port, string AuthenticationCode) {
            object[] results = this.Invoke("SendMMS", new object[] {
                        Username,
                        Password,
                        SMSNumber,
                        Message,
                        CameraID,
                        Port,
                        AuthenticationCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMMSAsync(string Username, string Password, string SMSNumber, string Message, int CameraID, int Port, string AuthenticationCode) {
            this.SendMMSAsync(Username, Password, SMSNumber, Message, CameraID, Port, AuthenticationCode, null);
        }
        
        /// <remarks/>
        public void SendMMSAsync(string Username, string Password, string SMSNumber, string Message, int CameraID, int Port, string AuthenticationCode, object userState) {
            if ((this.SendMMSOperationCompleted == null)) {
                this.SendMMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMMSOperationCompleted);
            }
            this.InvokeAsync("SendMMS", new object[] {
                        Username,
                        Password,
                        SMSNumber,
                        Message,
                        CameraID,
                        Port,
                        AuthenticationCode}, this.SendMMSOperationCompleted, userState);
        }
        
        private void OnSendMMSOperationCompleted(object arg) {
            if ((this.SendMMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMMSCompleted(this, new SendMMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMMS2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMMS2(string Username, string Password, string SMSNumber, string Message, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] ImageData) {
            object[] results = this.Invoke("SendMMS2", new object[] {
                        Username,
                        Password,
                        SMSNumber,
                        Message,
                        ImageData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMMS2Async(string Username, string Password, string SMSNumber, string Message, byte[] ImageData) {
            this.SendMMS2Async(Username, Password, SMSNumber, Message, ImageData, null);
        }
        
        /// <remarks/>
        public void SendMMS2Async(string Username, string Password, string SMSNumber, string Message, byte[] ImageData, object userState) {
            if ((this.SendMMS2OperationCompleted == null)) {
                this.SendMMS2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMMS2OperationCompleted);
            }
            this.InvokeAsync("SendMMS2", new object[] {
                        Username,
                        Password,
                        SMSNumber,
                        Message,
                        ImageData}, this.SendMMS2OperationCompleted, userState);
        }
        
        private void OnSendMMS2OperationCompleted(object arg) {
            if ((this.SendMMS2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMMS2Completed(this, new SendMMS2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProductLatestVersionGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProductLatestVersionGet(int ProductID) {
            object[] results = this.Invoke("ProductLatestVersionGet", new object[] {
                        ProductID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProductLatestVersionGetAsync(int ProductID) {
            this.ProductLatestVersionGetAsync(ProductID, null);
        }
        
        /// <remarks/>
        public void ProductLatestVersionGetAsync(int ProductID, object userState) {
            if ((this.ProductLatestVersionGetOperationCompleted == null)) {
                this.ProductLatestVersionGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductLatestVersionGetOperationCompleted);
            }
            this.InvokeAsync("ProductLatestVersionGet", new object[] {
                        ProductID}, this.ProductLatestVersionGetOperationCompleted, userState);
        }
        
        private void OnProductLatestVersionGetOperationCompleted(object arg) {
            if ((this.ProductLatestVersionGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductLatestVersionGetCompleted(this, new ProductLatestVersionGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestConnectionCompletedEventHandler(object sender, TestConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestConnection2CompletedEventHandler(object sender, TestConnection2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestConnection2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestConnection2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestConnection3CompletedEventHandler(object sender, TestConnection3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestConnection3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestConnection3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoteAddressCompletedEventHandler(object sender, RemoteAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoteAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoteAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConnectCompletedEventHandler(object sender, ConnectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Connect2CompletedEventHandler(object sender, Connect2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Connect2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Connect2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Connect3CompletedEventHandler(object sender, Connect3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Connect3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Connect3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Connect4CompletedEventHandler(object sender, Connect4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Connect4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Connect4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PingCompletedEventHandler(object sender, PingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PingAliveCompletedEventHandler(object sender, PingAliveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PingAliveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PingAliveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DisconnectCompletedEventHandler(object sender, DisconnectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisconnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisconnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NewContentCompletedEventHandler(object sender, NewContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ForceSyncCompletedEventHandler(object sender, ForceSyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForceSyncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForceSyncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ForceSync2CompletedEventHandler(object sender, ForceSync2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForceSync2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForceSync2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveSettingsCompletedEventHandler(object sender, SaveSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ApplyPromoCompletedEventHandler(object sender, ApplyPromoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyPromoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyPromoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GrantAccessCompletedEventHandler(object sender, GrantAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GrantAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GrantAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendAlertCompletedEventHandler(object sender, SendAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendContentCompletedEventHandler(object sender, SendContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendAlertWithImageCompletedEventHandler(object sender, SendAlertWithImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendAlertWithImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendAlertWithImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendAlert2CompletedEventHandler(object sender, SendAlert2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendAlert2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendAlert2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendAlertWithImage2CompletedEventHandler(object sender, SendAlertWithImage2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendAlertWithImage2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendAlertWithImage2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendAlertWithImage3CompletedEventHandler(object sender, SendAlertWithImage3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendAlertWithImage3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendAlertWithImage3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendSMSCompletedEventHandler(object sender, SendSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendFrameGrabCompletedEventHandler(object sender, SendFrameGrabCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFrameGrabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFrameGrabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendFrameGrab2CompletedEventHandler(object sender, SendFrameGrab2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFrameGrab2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFrameGrab2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendFrameGrab3CompletedEventHandler(object sender, SendFrameGrab3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFrameGrab3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFrameGrab3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendMMSCompletedEventHandler(object sender, SendMMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendMMS2CompletedEventHandler(object sender, SendMMS2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMMS2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMMS2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProductLatestVersionGetCompletedEventHandler(object sender, ProductLatestVersionGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductLatestVersionGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductLatestVersionGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591